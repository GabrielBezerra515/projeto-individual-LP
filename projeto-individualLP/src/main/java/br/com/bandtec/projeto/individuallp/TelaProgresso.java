/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.projeto.individuallp;

import java.awt.Color;
import static java.lang.Thread.sleep;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Aluno
 */
public class TelaProgresso extends javax.swing.JFrame {

    Integer maximoCPU = 0;
    Integer minimoCPU = 100;
    Integer mediaCPU = 0;
    Integer totalMediasCPU = 0;
    Integer maxCPU = 0;
    Integer minCPU = 0;

    Integer maximoDisco = 0;
    Integer minimoDisco = 100;
    Integer mediaDisco = 0;
    Integer totalMediasDisco = 0;
    Integer maxDisco = 0;
    Integer minDisco = 0;

    Integer maximoMem = 0;
    Integer minimoMem = 100;
    Integer mediaMem = 0;
    Integer totalMediasMem = 0;
    Integer maxMem = 0;
    Integer minMem = 0;

    /**
     * Creates new form TelaProgresso
     */
    public TelaProgresso() {
        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaProgresso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaProgresso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaProgresso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(TelaProgresso.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        pgCpu = new javax.swing.JProgressBar();
        lblCpu = new javax.swing.JLabel();
        pgDisco = new javax.swing.JProgressBar();
        lblDisco = new javax.swing.JLabel();
        pgMemoria = new javax.swing.JProgressBar();
        lblMemoria = new javax.swing.JLabel();
        btnValores = new javax.swing.JButton();
        lblResultado = new javax.swing.JLabel();
        lblResultado2 = new javax.swing.JLabel();
        cbValores = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciador de Consumo");
        setBackground(new java.awt.Color(204, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pgCpu.setBackground(new java.awt.Color(31, 31, 31));
        pgCpu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pgCpu.setForeground(new java.awt.Color(81, 166, 7));
        pgCpu.setStringPainted(true);

        lblCpu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblCpu.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCpu.setText("CPU:");

        pgDisco.setBackground(new java.awt.Color(31, 31, 31));
        pgDisco.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pgDisco.setForeground(new java.awt.Color(81, 166, 7));
        pgDisco.setStringPainted(true);

        lblDisco.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblDisco.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDisco.setText("Disco:");

        pgMemoria.setBackground(new java.awt.Color(31, 31, 31));
        pgMemoria.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pgMemoria.setForeground(new java.awt.Color(81, 166, 7));
        pgMemoria.setStringPainted(true);

        lblMemoria.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblMemoria.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMemoria.setText("Memória:");

        btnValores.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnValores.setText("Fazer leitura dos dados");
        btnValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValoresActionPerformed(evt);
            }
        });

        lblResultado.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        lblResultado2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        cbValores.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cbValores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Informações", "CPU", "Disco", "Memória" }));
        cbValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblResultado2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(pgCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(pgDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblMemoria)
                                .addGap(4, 4, 4)
                                .addComponent(pgMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnValores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbValores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 41, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pgCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(pgDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(pgMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnValores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbValores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblResultado2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValoresActionPerformed
        // TODO add your handling code here:
        Random gerador = new Random();

        Integer aleatorioCpu = gerador.nextInt(100) + 1;
        Integer aleatorioDisco = gerador.nextInt(100) + 1;
        Integer aleatorioMemoria = gerador.nextInt(100) + 1;

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i <= aleatorioCpu; i++) {
                    try {
                        sleep(10);
                        pgCpu.setValue(i);
                    } catch (InterruptedException e) {
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i <= aleatorioDisco; i++) {
                    try {
                        sleep(10);
                        pgDisco.setValue(i);
                    } catch (InterruptedException e) {
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i <= aleatorioMemoria; i++) {
                    try {
                        sleep(10);
                        pgMemoria.setValue(i);
                    } catch (InterruptedException e) {
                    }
                }
            }
        }.start();

        String cpu;
        String disco;
        String memoria;

        if (aleatorioCpu == 0) {
            cpu = String.format("CPU gasta_____%d%%", aleatorioCpu);
        } else {
            cpu = String.format("CPU gasta_____%d%%", aleatorioCpu);
        }

        if (aleatorioDisco == 0) {
            disco = String.format("Disco gasta____%d%%", aleatorioDisco);
        } else {
            disco = String.format("Disco gasta____%d%%", aleatorioDisco);
        }

        if (aleatorioMemoria == 0) {
            memoria = String.format("Memória gasta__%d%%", aleatorioMemoria);
        } else {
            memoria = String.format("Memória gasta__%d%%", aleatorioMemoria);
        }

        maxCPU = (aleatorioCpu > maximoCPU) ? (maximoCPU = aleatorioCpu) : (maximoCPU = maximoCPU);
        minCPU = (aleatorioCpu < minimoCPU) ? (minimoCPU = aleatorioCpu) : (minimoCPU = minimoCPU);
        totalMediasCPU++;
        mediaCPU = aleatorioCpu + mediaCPU;

        maxDisco = (aleatorioDisco > maximoDisco) ? (maximoDisco = aleatorioDisco) : (maximoDisco = maximoDisco);
        minDisco = (aleatorioDisco < minimoDisco) ? (minimoDisco = aleatorioDisco) : (minimoDisco = minimoDisco);
        totalMediasDisco++;
        mediaDisco = aleatorioDisco + mediaDisco;

        maxMem = (aleatorioMemoria > maximoMem) ? (maximoMem = aleatorioMemoria) : (maximoMem = maximoMem);
        minMem = (aleatorioMemoria < minimoMem) ? (minimoMem = aleatorioMemoria) : (minimoMem = minimoMem);
        totalMediasMem++;
        mediaMem = aleatorioMemoria + mediaMem;

        lblResultado.setText("<html>" + cpu + "<br>" + disco + "<br>" + memoria + "</html>");
        cbValoresActionPerformed(evt);
    }//GEN-LAST:event_btnValoresActionPerformed

    private void cbValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValoresActionPerformed
        // TODO add your handling code here:
        if (cbValores.getSelectedItem().equals("CPU")) {
            String textoMaximoCPU = String.format("Valor Máximo da CPU: %d%%", maxCPU);
            String textoMinimoCPU = String.format("Valor mínimo da CPU: %d%%", minCPU);
            String textoMediaCPU = String.format("Média de uso da CPU: %d", mediaCPU / totalMediasCPU);

            lblResultado2.setText("<html>" + textoMaximoCPU + "<br>" + textoMinimoCPU + "<br>" + textoMediaCPU + "</html>");
        } else if (cbValores.getSelectedItem().equals("Disco")) {
            String textoMaximoDisco = String.format("Valor Máximo do Disco: %d%%", maxDisco);
            String textoMinimoDisco = String.format("Valor mínimo do Disco: %d%%", minDisco);
            String textoMediaDisco = String.format("Média de uso do Disco: %d", mediaDisco / totalMediasDisco);

            lblResultado2.setText("<html>" + textoMaximoDisco + "<br>" + textoMinimoDisco + "<br>" + textoMediaDisco + "</html>");
        } else if (cbValores.getSelectedItem().equals("Memória")){
            String textoMaximoMem = String.format("Valor Máximo da Memória: %d%%", maxMem);
            String textoMinimoMem = String.format("Valor mínimo da Memória: %d%%", minMem);
            String textoMediaMem = String.format("Média de uso da Memória: %d", mediaMem / totalMediasMem);

            lblResultado2.setText("<html>" + textoMaximoMem + "<br>" + textoMinimoMem + "<br>" + textoMediaMem + "</html>");
        }else {
            lblResultado2.setText("<html>Selecione um Item </html>");
        }
    }//GEN-LAST:event_cbValoresActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProgresso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProgresso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProgresso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProgresso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaProgresso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnValores;
    private javax.swing.JComboBox<String> cbValores;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblCpu;
    private javax.swing.JLabel lblDisco;
    private javax.swing.JLabel lblMemoria;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JLabel lblResultado2;
    private javax.swing.JProgressBar pgCpu;
    private javax.swing.JProgressBar pgDisco;
    private javax.swing.JProgressBar pgMemoria;
    // End of variables declaration//GEN-END:variables
}
